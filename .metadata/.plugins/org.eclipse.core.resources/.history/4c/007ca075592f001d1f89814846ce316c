package com.BatchProcessing.scheduler;

import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

import org.springframework.batch.core.Job;
import org.springframework.batch.core.JobParameters;
import org.springframework.batch.core.JobParametersBuilder;
import org.springframework.batch.core.JobParametersInvalidException;
import org.springframework.batch.core.launch.JobLauncher;
import org.springframework.batch.core.repository.JobExecutionAlreadyRunningException;
import org.springframework.batch.core.repository.JobInstanceAlreadyCompleteException;
import org.springframework.batch.core.repository.JobRestartException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;
import org.springframework.stereotype.Component;

@Component
public class scheduler {
	@Autowired
	private JobLauncher jobLauncher;

	@Autowired
	private Job job;


//	@Scheduled(fixedRate = 1000)
//	public void importCsvToDBJob() {
//		System.out.println("hari");
//		
//	}
//
//	@Scheduled(fixedRate = 5000)
//	public void add2DBJob() {
//		
//		System.out.println("add service call in " + new Date().toString());
//	}

//	@Scheduled(cron = "0/15"
//			+ " * * * * *")
//	public void fetchDBJob() {
//		
//		System.out.println("fetch service call in " + new Date().toString());
//		
//	}
//	

	
	@Scheduled(fixedRate = 20000)
	public void scheduleImportToDB() {
		
//        JobParameters jobParameters = new JobParametersBuilder()
//        		.addLong("startAt", System.currentTimeMillis()).toJobParameters();
//        try {
//            jobLauncher.run(job, jobParameters);
//        } catch (JobExecutionAlreadyRunningException | JobRestartException | JobInstanceAlreadyCompleteException | JobParametersInvalidException e) {
//            e.printStackTrace();
//        }
        
        Calendar cal = Calendar.getInstance();
        Date now = cal.getTime();

        cal.add(Calendar.SECOND, 20);
        Date later = cal.getTime();
        
        Locale locale = new Locale("EN", "INDIA");
        DateFormat dateFormat = DateFormat.getTimeInstance(DateFormat.DEFAULT, locale);
        String date = dateFormat.format(later);

        System.out.println("The next schedule will start at " + date);
    }
}
